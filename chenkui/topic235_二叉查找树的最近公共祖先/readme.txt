问题描述:给定二叉搜索树（BST），找到BST中两个给定节点的最低共同祖先（LCA）。

根据维基百科上LCA的定义：“最低共同祖先在两个节点p和q之间定义为T中的最低节点，其中p和q都是后代（我们允许节点成为其自身的后代）。”

给定二叉搜索树：root = [6,2,8,0,4,7,9，null，null，3,5]

例1：

输入：root = [6,2,8,0,4,7,9，null，null，3,5]，p = 2，q = 8
输出：6
说明：节点2和8的LCA为6。

例2：

输入：root = [6,2,8,0,4,7,9，null，null，3,5]，p = 2，q = 4
输出：2
说明：节点2和4的LCA是2，因为根据LCA定义，节点可以是其自身的后代。
 
注意：

所有节点的值都是唯一的。
p和q是不同的，两个值都将存在于BST中。